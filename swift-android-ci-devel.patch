diff --git a/swift-build/Sources/SWBUtil/FSProxy.swift b/swift-build/Sources/SWBUtil/FSProxy.swift
index b446d21..f88f3c3 100644
--- a/swift-build/Sources/SWBUtil/FSProxy.swift
+++ b/swift-build/Sources/SWBUtil/FSProxy.swift
@@ -49,7 +49,7 @@ public struct FileInfo: Equatable, Sendable {
         #if os(Windows)
         return (statBuf.st_mode & UInt16(ucrt.S_IFREG)) != 0
         #else
-        return (statBuf.st_mode & S_IFREG) != 0
+        return (mode_t(statBuf.st_mode) & S_IFREG) != 0
         #endif
     }
 
@@ -57,7 +57,7 @@ public struct FileInfo: Equatable, Sendable {
         #if os(Windows)
         return (statBuf.st_mode & UInt16(ucrt.S_IFDIR)) != 0
         #else
-        return (statBuf.st_mode & S_IFDIR) != 0
+        return (mode_t(statBuf.st_mode) & S_IFDIR) != 0
         #endif
     }
 
@@ -65,7 +65,7 @@ public struct FileInfo: Equatable, Sendable {
         #if os(Windows)
         return (statBuf.st_mode & UInt16(S_IFLNK)) == S_IFLNK
         #else
-        return (statBuf.st_mode & S_IFMT) == S_IFLNK
+        return (mode_t(statBuf.st_mode) & S_IFMT) == S_IFLNK
         #endif
     }
 
@@ -75,7 +75,7 @@ public struct FileInfo: Equatable, Sendable {
         // Don't use FileManager.isExecutableFile due to https://github.com/swiftlang/swift-foundation/issues/860
         return (statBuf.st_mode & UInt16(_S_IEXEC)) != 0
         #else
-        return (statBuf.st_mode & S_IXUSR) != 0
+        return (mode_t(statBuf.st_mode) & S_IXUSR) != 0
         #endif
     }
 
@@ -1395,9 +1395,9 @@ public class PseudoFS: FSProxy, @unchecked Sendable {
                 #else
                 info.st_mtimespec = timespec(tv_sec: time_t(node.timestamp), tv_nsec: 0)
                 #endif
-                info.st_size = off_t(contents.bytes.count)
-                info.st_dev = node.device
-                info.st_ino = node.inode
+                info.st_size = numericCast(contents.bytes.count)
+                info.st_dev = numericCast(node.device)
+                info.st_ino = numericCast(node.inode)
                 return createFileInfo(info)
             case .directory(let dir):
                 var info = stat()
@@ -1405,12 +1405,12 @@ public class PseudoFS: FSProxy, @unchecked Sendable {
                 info.st_mode = UInt16(ucrt.S_IFDIR)
                 info.st_mtimespec = timespec(tv_sec: Int64(node.timestamp), tv_nsec: 0)
                 #else
-                info.st_mode = S_IFDIR
+                info.st_mode = numericCast(S_IFDIR)
                 info.st_mtimespec = timespec(tv_sec: time_t(node.timestamp), tv_nsec: 0)
                 #endif
-                info.st_size = off_t(dir.contents.count)
-                info.st_dev = node.device
-                info.st_ino = node.inode
+                info.st_size = numericCast(dir.contents.count)
+                info.st_dev = numericCast(node.device)
+                info.st_ino = numericCast(node.inode)
                 return createFileInfo(info)
             case .symlink(_):
                 var info = stat()
@@ -1418,12 +1418,12 @@ public class PseudoFS: FSProxy, @unchecked Sendable {
                 info.st_mode = UInt16(S_IFLNK)
                 info.st_mtimespec = timespec(tv_sec: Int64(node.timestamp), tv_nsec: 0)
                 #else
-                info.st_mode = S_IFLNK
+                info.st_mode = numericCast(S_IFLNK)
                 info.st_mtimespec = timespec(tv_sec: time_t(node.timestamp), tv_nsec: 0)
                 #endif
-                info.st_size = off_t(0)
-                info.st_dev = node.device
-                info.st_ino = node.inode
+                info.st_size = numericCast(0)
+                info.st_dev = numericCast(node.device)
+                info.st_ino = numericCast(node.inode)
                 return createFileInfo(info)
             }
         }
